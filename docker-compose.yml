services:
  traefik:
    image: traefik:v2.10
    command:
      # En dev usa api.insecure=true para dashboard sin seguridad
      # En prod usa la configuración segura (sin --api.insecure=true)
      - "--api.insecure=true"                    # Dev ONLY
      # - "--api.dashboard=true"                 # Prod ONLY
      # - "--api=true"                           # Prod ONLY
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      # En prod, si querés dashboard seguro, expone otro puerto como 8080 y protege
      # - "8080:8080"    # Prod ONLY
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/letsencrypt/acme.json"
    networks:
      - public

  db:
    image: postgres:15-alpine    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      PORT: ${SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    depends_on:
      - db
    networks:
      - internal
      - public
    # NO expongas puerto en prod porque Traefik lo maneja
    ports:                               # Dev ONLY
      - "4000:4000"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    depends_on:
      - server
    networks:
      - internal
      - public
    # NO exponer puerto en prod porque Traefik lo maneja
    ports:                            # Dev ONLY
      - "${CLIENT_PORT}:80"

volumes:
  db_data:

networks:
  internal:
    driver: bridge
  public:
    driver: bridge